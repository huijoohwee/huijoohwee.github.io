{
  "@context": {
    "@version": 1.1,
    "@base": "https://huijoohwee.github.io/schema/base.jsonld",
    "@vocab": "https://huijoohwee.github.io/schema/vocab.jsonld",

    "core": "https://huijoohwee.github.io/schema/core.jsonld",
    "uc": "https://huijoohwee.github.io/schema/uc.jsonld",
    "wf": "https://huijoohwee.github.io/schema/wf.jsonld",
    "kg": "https://huijoohwee.github.io/schema/kg.jsonld",

    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "nquads": "https://www.w3.org/TR/n-quads/#n-quads",

    "jjnhm": "https://huijoohwee.github.io/schema/jjnhm.jsonld",
    "jsonld": "https://www.w3.org/2013/json-ld-context/rdfa11",
    "jdbl": "https://huijoohwee.github.io/schema/jdbl.jsonld",
    "nqds": "https://huijoohwee.github.io/schema/nqds.jsonld",
    "hbs": "https://huijoohwee.github.io/schema/hbs.jsonld",
    "mmd": "https://huijoohwee.github.io/schema/mmd.jsonld",

    "PredicateRegistry": "nqds:PredicateRegistry",
    "PredicateClass": "nqds:PredicateClass",
    "Predicate": "nqds:Predicate",
    "Category": "nqds:Category",

    "label": "rdfs:label",
    "comment": "rdfs:comment",
    "category": "nqds:category",
    "predicates": { "@id": "nqds:predicates", "@container": "@list" },
    "subjectTypes": { "@id": "nqds:subjectTypes", "@container": "@list" },
    "objectTypes": { "@id": "nqds:objectTypes", "@container": "@list" },
    "usagePattern": "nqds:usagePattern",
    "description": "rdfs:comment",
    "totalPredicates": "nqds:totalPredicates",
    "categoryDistribution": "nqds:categoryDistribution",
    "mostUsedPredicates": { "@id": "nqds:mostUsedPredicates", "@container": "@list" },
    "version": "core:version",
    "created": { "@id": "core:created", "@type": "xsd:dateTime" },
    "updated": { "@id": "core:updated", "@type": "xsd:dateTime" },
    "examples": "nqds:examples",
    "pattern": "nqds:pattern",
    "docs": "rdfs:seeAlso"
  },

  "@id": "https://huijoohwee.github.io/schema/nqds-predicates.jsonld#Registry:v1.1",
  "@type": "PredicateRegistry",
  "label": "NQDS Predicate Registry",
  "comment": "Registry of predicates for NQDS semantic payloads, organized by category with usage patterns and validator guidance",
  "version": "1.1.0",
  "created": "2025-09-26T00:00:00Z",
  "updated": "2025-10-09T00:00:00Z",
  "totalPredicates": 87,
  "categoryDistribution": {
    "action": 32,
    "relationship": 22,
    "state": 10,
    "temporal": 8,
    "conditional": 7,
    "quantitative": 6,
    "communication": 8,
    "evaluation": 6
  },
  "mostUsedPredicates": ["[defines]", "[manages]", "[provides]", "[contains]", "[enables]"],

  "predicates": [
    {
      "@type": "PredicateClass",
      "label": "Action Predicates",
      "category": "action",
      "description": "Predicates that express actions, operations or orchestration steps",
      "predicates": [
        { "predicate": "[initiates]", "description": "Starts or triggers a process or project", "subjectTypes": ["Agent", "System"], "objectTypes": ["Process", "Project"], "usagePattern": "workflow initiation" },
        { "predicate": "[defines]", "description": "Defines or specifies a concept, rule, or requirement", "subjectTypes": ["Agent", "System"], "objectTypes": ["Requirements", "Rules"], "usagePattern": "specification" },
        { "predicate": "[designs]", "description": "Designs or architects a system or component", "subjectTypes": ["Human"], "objectTypes": ["Blueprint", "Architecture"], "usagePattern": "design activities" },
        { "predicate": "[orchestrates]", "description": "Coordinates multiple components, agents or flows", "subjectTypes": ["Coordinator", "System"], "objectTypes": ["Workflow", "Process"], "usagePattern": "flow orchestration" },
        { "predicate": "[executes]", "description": "Performs or runs a task or check", "subjectTypes": ["Agent", "System"], "objectTypes": ["Task", "Gate"], "usagePattern": "task execution" },
        { "predicate": "[deploys]", "description": "Deploys or releases components or services", "subjectTypes": ["Agent", "System"], "objectTypes": ["Service", "Application"], "usagePattern": "deployment" },
        { "predicate": "[generates]", "description": "Generates artifacts such as code, tests, or documents", "subjectTypes": ["Agent", "System"], "objectTypes": ["Code", "Tests", "Artifact"], "usagePattern": "artifact generation" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Relationship Predicates",
      "category": "relationship",
      "description": "Predicates that model structural or semantic relationships between entities",
      "predicates": [
        { "predicate": "[contains]", "description": "Contains or includes elements", "subjectTypes": ["Container", "Collection"], "objectTypes": ["Element", "Component"], "usagePattern": "containment relationships" },
        { "predicate": "[connects]", "description": "Connects two components or systems", "subjectTypes": ["Component", "System"], "objectTypes": ["Component", "System"], "usagePattern": "connectivity modeling" },
        { "predicate": "[supports]", "description": "Provides support for a feature or capability", "subjectTypes": ["System", "Component"], "objectTypes": ["Feature", "Capability"], "usagePattern": "support relationships" },
        { "predicate": "[includes]", "description": "Includes items or content", "subjectTypes": ["Collection"], "objectTypes": ["Item"], "usagePattern": "inclusion" },
        { "predicate": "[references]", "description": "References an external resource or document", "subjectTypes": ["System", "Component"], "objectTypes": ["Resource", "Document"], "usagePattern": "citations and links" },
        { "predicate": "[owns]", "description": "Ownership or control of a resource", "subjectTypes": ["Owner"], "objectTypes": ["Resource"], "usagePattern": "ownership" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "State Predicates",
      "category": "state",
      "description": "Predicates that describe states, capabilities, permissions and invariant properties",
      "predicates": [
        { "predicate": "[is]", "description": "Equals or has value/state", "subjectTypes": ["Any"], "objectTypes": ["Value", "State"], "usagePattern": "state assertions" },
        { "predicate": "[has]", "description": "Has an attribute or property", "subjectTypes": ["Entity", "System"], "objectTypes": ["Attribute"], "usagePattern": "attribute ownership" },
        { "predicate": "[can]", "description": "Indicates capability or permission", "subjectTypes": ["Agent", "System"], "objectTypes": ["Capability", "Permission"], "usagePattern": "capability assertions" },
        { "predicate": "[must]", "description": "Mandatory condition or requirement", "subjectTypes": ["Entity"], "objectTypes": ["Condition", "Requirement"], "usagePattern": "enforcement" },
        { "predicate": "[becomes]", "description": "Transitions to a new state", "subjectTypes": ["Entity"], "objectTypes": ["State"], "usagePattern": "state transition" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Temporal Predicates",
      "category": "temporal",
      "description": "Predicates that express temporal ordering or relationships",
      "predicates": [
        { "predicate": "[before]", "description": "Occurs before another event", "subjectTypes": ["Event", "Process"], "objectTypes": ["Event", "Time"], "usagePattern": "temporal ordering" },
        { "predicate": "[after]", "description": "Occurs after another event", "subjectTypes": ["Event", "Process"], "objectTypes": ["Event", "Time"], "usagePattern": "temporal ordering" },
        { "predicate": "[during]", "description": "Occurs during a period or phase", "subjectTypes": ["Event", "Process"], "objectTypes": ["Period", "Phase"], "usagePattern": "temporal scoping" },
        { "predicate": "[then]", "description": "Then, next in sequence", "subjectTypes": ["Step", "Process"], "objectTypes": ["Step", "Action"], "usagePattern": "sequence chaining" },
        { "predicate": "[leads-to]", "description": "Leads to a result or event", "subjectTypes": ["Action", "Event"], "objectTypes": ["Result", "Event"], "usagePattern": "causal chains" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Conditional Predicates",
      "category": "conditional",
      "description": "Predicates used to express conditional logic and guards",
      "predicates": [
        { "predicate": "[if]", "description": "If condition holds then...", "subjectTypes": ["Condition", "Rule"], "objectTypes": ["Condition", "State"], "usagePattern": "conditional branching" },
        { "predicate": "[unless]", "description": "Unless condition holds", "subjectTypes": ["Condition"], "objectTypes": ["Condition"], "usagePattern": "negated conditions" },
        { "predicate": "[while]", "description": "While condition true", "subjectTypes": ["Process", "State"], "objectTypes": ["Condition"], "usagePattern": "looping/guarded execution" },
        { "predicate": "[until]", "description": "Until condition satisfied", "subjectTypes": ["Process"], "objectTypes": ["Condition"], "usagePattern": "termination guard" },
        { "predicate": "[and]", "description": "Logical AND of conditions", "subjectTypes": ["Condition"], "objectTypes": ["Condition"], "usagePattern": "composite guards" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Quantitative Predicates",
      "category": "quantitative",
      "description": "Predicates representing measures, counts, and numeric evaluations",
      "predicates": [
        { "predicate": "[measures]", "description": "Measures a metric or value", "subjectTypes": ["Metric", "System"], "objectTypes": ["Value", "Measurement"], "usagePattern": "metric reporting" },
        { "predicate": "[scores]", "description": "Assigns a score or rating", "subjectTypes": ["Evaluator"], "objectTypes": ["Score"], "usagePattern": "scoring" },
        { "predicate": "[counts]", "description": "Counts occurrences or items", "subjectTypes": ["Counter"], "objectTypes": ["Number"], "usagePattern": "counting" },
        { "predicate": "[totals]", "description": "Totals or aggregates values", "subjectTypes": ["Aggregator"], "objectTypes": ["Totals"], "usagePattern": "aggregation" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Communication Predicates",
      "category": "communication",
      "description": "Predicates for messaging, publishing and subscriptions",
      "predicates": [
        { "predicate": "[sends]", "description": "Sends a message or data", "subjectTypes": ["Agent", "System"], "objectTypes": ["Message", "Data"], "usagePattern": "message transmission" },
        { "predicate": "[broadcasts]", "description": "Broadcasts to many receivers", "subjectTypes": ["Sender"], "objectTypes": ["Message"], "usagePattern": "pub-sub broadcast" },
        { "predicate": "[receives]", "description": "Receives a message or data", "subjectTypes": ["Receiver"], "objectTypes": ["Message", "Data"], "usagePattern": "message receipt" },
        { "predicate": "[publishes]", "description": "Publishes events or information", "subjectTypes": ["Publisher"], "objectTypes": ["Event"], "usagePattern": "event publishing" },
        { "predicate": "[subscribes]", "description": "Subscribes to events or feeds", "subjectTypes": ["Subscriber"], "objectTypes": ["Event"], "usagePattern": "event subscription" }
      ]
    },
    {
      "@type": "PredicateClass",
      "label": "Evaluation Predicates",
      "category": "evaluation",
      "description": "Predicates for assessment, comparison and optimization",
      "predicates": [
        { "predicate": "[evaluates]", "description": "Evaluates or assesses an object", "subjectTypes": ["Evaluator"], "objectTypes": ["Object", "Performance"], "usagePattern": "evaluation" },
        { "predicate": "[assesses]", "description": "Assesses quality or state", "subjectTypes": ["Assessor"], "objectTypes": ["Quality"], "usagePattern": "quality assessment" },
        { "predicate": "[compares]", "description": "Compares alternatives or results", "subjectTypes": ["Comparator"], "objectTypes": ["Options"], "usagePattern": "comparison" },
        { "predicate": "[optimizes]", "description": "Optimizes for performance or cost", "subjectTypes": ["Optimizer"], "objectTypes": ["Performance"], "usagePattern": "optimization" }
      ]
    }
  ],

  "patternTemplates": {
    "creationPattern": "::creation::(Subject)-[creates|generates|produces]->{Artifact}",
    "managementPattern": "::management::(Manager)-[manages|controls|maintains]->{Resource}",
    "communicationPattern": "::communication::(Sender)-[sends|communicates|notifies]->{Receiver}",
    "evaluationPattern": "::evaluation::(Evaluator)-[evaluates|assesses|measures]->{Target}",
    "relationshipPattern": "::relationship::(Entity1)-[contains|includes|supports]->{Entity2}",
    "temporalPattern": "::temporal::(Event1)-[before|after|leads-to]->{Event2}"
  },

  "semanticRelationships": {
    "synonymGroups": [
      ["[creates]", "[generates]", "[produces]"],
      ["[manages]", "[controls]", "[maintains]"],
      ["[provides]", "[supplies]", "[offers]"]
    ],
    "antonymPairs": [
      ["[enables]", "[prevents]"],
      ["[includes]", "[excludes]"],
      ["[accepts]", "[rejects]"]
    ],
    "hierarchicalRelations": [
      { "from": "[contains]", "to": "[includes]", "then": "[covers]" },
      { "from": "[manages]", "to": "[controls]", "then": "[owns]" }
    ],
    "temporalChains": [
      { "sequence": ["[before]", "[during]", "[after]"] },
      { "sequence": ["[initiates]", "[executes]", "[completes]"] }
    ]
  },

  "validatorHints": {
    "resolveIRIs": "Ensure predicate IRIs or CURIEs resolve when merged with base/vocab contexts; canonicalize bracketed form to stable IRIs in tooling.",
    "usageValidation": "Validate subjectTypes and objectTypes against JSON-LD type contexts (core, uc, vocab); run nqds-parser and graph-validator on sample payloads.",
    "consistencyChecks": "Detect synonym groups, enforce preferred predicate canonicalization, and flag antonyms used together inconsistently.",
    "recommendedTools": ["nqds-parser", "graph-validator", "jsonld.js", "kg-diff-checker", "predicate-usage-analyzer"]
  },

  "examples": [
    {
      "@type": "nqds:SemanticGraph",
      "label": "Orchestration Example",
      "description": "Agent orchestrates a workflow and generates an artifact; diagram and trace linkage shown in examples",
      "examplePath": "/schema/examples/nqds/orchestration-example.nqds",
      "triples": [
        "::orchestrator::(Orchestrator)-[orchestrates]->{Workflow}",
        "::workflow::(Workflow)-[executes]->{Task}",
        "::task::(Task)-[generates]->{Artifact}"
      ]
    }
  ],

  "releaseNotes": {
    "version": "1.1.0",
    "summary": "Normalized predicate registry, clearer categories, pattern templates, synonym/antonym groups and validator guidance; added recommended tooling",
    "compatibility": "Backwards compatible with previous bracketed predicate notation; tooling should canonicalize to IRIs for runtime."
  }
}